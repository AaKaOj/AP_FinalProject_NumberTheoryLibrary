#include<math.h>
#include<stdbool.h>
#include<stdio.h>
#include<stdlib.h> 

bool isPrime(int n)
{
    bool flag=true;
    for (int i=2; i<=sqrt((double)n) && flag; i++)
    {
        if (n%i==0) 
        {
            flag=false;
        }
    }
    if (n==1)
        flag = false;
    return flag;
}

int nextPrime(int n)
{
    for (int i=n+1; ; i++)
    {
        if (isPrime(i))
            return i;
    }
}

int prevPrime(int n)
{
    if(n<=1)
    printf("Invalid input\n");
    else
    {
        for (int i=n-1; i>1 ; i--)
        {
            if (isPrime(i))
            return i;
        }
    }
}

int nearestPrime(int n)
{
    if (n<=1)
        return 2;
    else
    {
        int prev=prevPrime(n);
        int next=nextPrime(n);
        int prevdiff=n-prev;
        int nextdiff=next-n;
        if(prevdiff<=nextdiff)
            return prev;
        else
            return next;
    }
}

long factorial (int n)
{
    int fact=1;
    for (int i=n; i>0; i--)
    {
        fact*=i;
    }
    return fact;
}

int sumUpto(int n)
{
    int sum= (n*(n+1))/2;
    return sum;
}
